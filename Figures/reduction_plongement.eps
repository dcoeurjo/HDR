%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./Figures/reduction_plongement.fig
%%Creator: fig2dev Version 3.2 Patchlevel 5
%%CreationDate: Fri Dec 21 13:18:07 2007
%%For: dcoeurjo@liristvj (David Coeurjolly,,,,)
%%BoundingBox: 0 0 951 283
%Magnification: 1.0000
%%EndComments
%%BeginProlog
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% vertical sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 32 true [ 16 0 0 -32 0 32 ]
	{<400020001000080004000200010000800100020004000800
	100020004000800040002000100008000400020001000080
	01000200040008001000200040008000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P22 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

/pageheader {
save
newpath 0 283 moveto 0 0 lineto 951 0 lineto 951 283 lineto closepath clip newpath
-104.9 358.1 translate
1 -1 scale
$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06299 0.06299 sc
} bind def
/pagefooter {
$F2psEnd
restore
} bind def
%%EndProlog
pageheader
%
% Fig objects follow
%
% 
% here starts figure with depth 53
% Polyline
0 slj
0 slc
15.000 slw
n 8730 4050 m 7650 4050 l
 7650 3645 l gs col4 s gr 
% Polyline
n 8280 2700 m 7875 2700 l 7875 3600 l
 7695 3600 l gs col2 s gr 
% Polyline
n 7245 2700 m 7650 2700 l
 7650 3600 l gs col2 s gr 
% Polyline
n 7200 2745 m
 7200 3555 l gs col4 s gr 
% Polyline
n 7200 3600 m 6525 3600 l
 6525 3375 l gs col4 s gr 
% Polyline
n 7200 2700 m
 6525 2700 l gs col4 s gr 
% Polyline
n 7200 3645 m 7200 4050 l
 6615 4050 l gs col2 s gr 
% Polyline
n 6525 3330 m
 6525 2745 l gs col2 s gr 
% Polyline
n 6480 4050 m 6075 4050 l 6075 2700 l
 6525 2700 l gs col4 s gr 
% Polyline
7.500 slw
n 12195 1935 m 12285 1935 l 12285 1845 l 12375 1845 l 12375 1935 l 12465 1935 l
 12465 1845 l 12555 1845 l 12555 1935 l 12645 1935 l 12645 1845 l
 12735 1845 l 12735 1935 l 12825 1935 l 12825 1845 l 12915 1845 l
 12915 1935 l 13005 1935 l 13005 1845 l 13095 1845 l 13095 1935 l
 13185 1935 l 13185 1845 l 13275 1845 l 13275 1935 l 13365 1935 l
 13365 1845 l 13455 1845 l 13455 1935 l 13545 1935 l 13545 1845 l
 13635 1845 l 13635 1935 l 13770 1935 l 13770 2115 l 12150 2115 l
 12150 1935 l
 cp gs col0 s gr 
% Polyline
n 11475 3735 m 11565 3735 l 11565 3645 l 11655 3645 l 11655 3735 l 11745 3735 l
 11745 3645 l 11835 3645 l 11835 3735 l 11925 3735 l 11925 3645 l
 12015 3645 l 12015 3735 l 12105 3735 l 12105 3645 l 12195 3645 l
 12195 3735 l 12285 3735 l 12285 3645 l 12375 3645 l 12375 3735 l
 12465 3735 l 12465 3645 l 12555 3645 l 12555 3735 l 12645 3735 l
 12645 3645 l 12735 3645 l 12735 3735 l 12825 3735 l 12825 3645 l
 12915 3645 l 12915 3735 l 13050 3735 l 13050 3915 l 11430 3915 l
 11430 3735 l
 cp gs col0 s gr 
% Polyline
n 11655 5445 m 11745 5445 l 11745 5355 l 11835 5355 l 11835 5445 l 11925 5445 l
 11925 5355 l 12015 5355 l 12015 5445 l 12105 5445 l 12105 5355 l
 12195 5355 l 12195 5445 l 12285 5445 l 12285 5355 l 12375 5355 l
 12375 5445 l 12465 5445 l 12465 5355 l 12555 5355 l 12555 5445 l
 12645 5445 l 12645 5355 l 12735 5355 l 12735 5445 l 12825 5445 l
 12825 5355 l 12915 5355 l 12915 5445 l 13005 5445 l 13005 5355 l
 13095 5355 l 13095 5445 l 13230 5445 l 13230 5625 l 11610 5625 l
 11610 5445 l
 cp gs col0 s gr 
% Polyline
n 15165 5040 m 15255 5040 l 15255 4950 l 15345 4950 l 15345 5040 l 15435 5040 l
 15435 4950 l 15525 4950 l 15525 5040 l 15615 5040 l 15615 4950 l
 15705 4950 l 15705 5040 l 15795 5040 l 15795 4950 l 15885 4950 l
 15885 5040 l 15975 5040 l 15975 4950 l 16065 4950 l 16065 5040 l
 16155 5040 l 16155 4950 l 16245 4950 l 16245 5040 l 16335 5040 l
 16335 4950 l 16425 4950 l 16425 5040 l 16515 5040 l 16515 4950 l
 16605 4950 l 16605 5040 l 16740 5040 l 16740 5220 l 15120 5220 l
 15120 5040 l
 cp gs col0 s gr 
% Polyline
n 15075 1935 m 15165 1935 l 15165 1845 l 15255 1845 l 15255 1935 l 15345 1935 l
 15345 1845 l 15435 1845 l 15435 1935 l 15525 1935 l 15525 1845 l
 15615 1845 l 15615 1935 l 15705 1935 l 15705 1845 l 15795 1845 l
 15795 1935 l 15885 1935 l 15885 1845 l 15975 1845 l 15975 1935 l
 16065 1935 l 16065 1845 l 16155 1845 l 16155 1935 l 16245 1935 l
 16245 1845 l 16335 1845 l 16335 1935 l 16425 1935 l 16425 1845 l
 16515 1845 l 16515 1935 l 16650 1935 l 16650 2115 l 15030 2115 l
 15030 1935 l
 cp gs col0 s gr 
% Polyline
75.000 slw
n 12510 1845 m 12510 1260 l 11520 1260 l
 11070 1260 l gs col4 s gr 
% Polyline
n 11610 3645 m 11610 2295 l 12015 2295 l 12015 1440 l 11295 1440 l
 11295 1755 l gs col2 s gr 
% Polyline
n 13590 1845 m 13590 1710 l 13860 1710 l 13860 4005 l 13545 4005 l
 13545 4320 l gs col4 s gr 
% Polyline
7.500 slw
n 13770 4770 m 13680 4770 l 13680 4680 l 13590 4680 l 13590 4590 l 13680 4590 l
 13680 4500 l 13590 4500 l 13590 4410 l 13680 4410 l 13680 4320 l
 13590 4320 l 13590 4230 l 13680 4230 l 13680 4140 l 13860 4140 l
 13860 4770 l
 cp gs col0 s gr 
% Polyline
75.000 slw
n 12870 3645 m 12870 3465 l 13365 3465 l 13365 4185 l 13365 4455 l
 13590 4455 l gs col4 s gr 
% Polyline
n 11970 5355 m 11970 5130 l 11025 5130 l 11025 2070 l
 11385 2070 l gs col4 s gr 
% Polyline
n 11295 1710 m
 11385 1710 l gs col2 s gr 
% Polyline
n 11115 1260 m 11115 1890 l
 11385 1890 l gs col4 s gr 
% Polyline
n 14175 3825 m
 14715 3825 l gs col2 s gr 
% Polyline
n 13410 1845 m 13410 1575 l 14220 1575 l 14220 3060 l
 14220 3825 l gs col2 s gr 
% Polyline
n 14715 3645 m 14355 3645 l 14355 2925 l 14355 2790 l 14355 2610 l 14355 1575 l
 15210 1575 l
 15210 1845 l gs col2 s gr 
% Polyline
n 14715 3465 m 14490 3465 l 14490 3150 l 15075 3150 l 15075 4860 l 15480 4860 l

 15480 4950 l gs col4 s gr 
% Polyline
n 12150 5355 m 12150 4635 l 13185 4635 l 13185 4635 l
 13590 4635 l gs col2 s gr 
% Polyline
7.500 slw
n 11565 2205 m 11475 2205 l 11475 2115 l 11385 2115 l 11385 2025 l 11475 2025 l
 11475 1935 l 11385 1935 l 11385 1845 l 11475 1845 l 11475 1755 l
 11385 1755 l 11385 1665 l 11475 1665 l 11475 1575 l 11655 1575 l
 11655 2205 l
 cp gs col0 s gr 
% here ends figure;
% 
% here starts figure with depth 50
% Ellipse
7.500 slw
n 8325 2700 64 64 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 550.73 175.73] PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 7650 3600 64 64 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 505.73 235.73] PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 8775 4050 64 64 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 580.73 265.73] PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 7200 2700 64 64 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 475.73 175.73] PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 7200 3600 64 64 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 475.73 235.73] PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6525 4050 64 64 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 430.73 265.73] PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6525 3375 64 64 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 430.73 220.73] PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 6525 2700 64 64 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P22 [8 0 0 -16 430.73 175.73] PATmp PATsp ef gr PATusp gs col0 s gr

% Polyline
0 slj
0 slc
15.000 slw
n 2340 2745 m
 2610 3555 l gs col4 s gr 
% Polyline
n 2340 2745 m
 3600 4140 l gs col4 s gr 
% Polyline
n 4635 3600 m
 4050 3375 l gs col4 s gr 
% Polyline
n 2520 4410 m
 3555 4275 l gs col4 s gr 
% Polyline
n 2340 4275 m
 2610 3780 l gs col2 s gr 
% Polyline
n 3060 2340 m
 3735 3060 l gs col2 s gr 
% Polyline
n 2340 2745 m
 3735 3195 l gs col2 s gr 
% Polyline
n 4230 5310 m
 3780 4500 l gs col2 s gr 
% Polyline
2 slj
n 4140 5490 m 4138 5490 l 4134 5490 l 4126 5490 l 4113 5490 l 4096 5489 l
 4072 5489 l 4043 5488 l 4008 5488 l 3968 5487 l 3923 5486 l
 3874 5484 l 3822 5483 l 3767 5481 l 3710 5480 l 3653 5478 l
 3595 5476 l 3539 5473 l 3483 5471 l 3428 5468 l 3375 5465 l
 3325 5462 l 3276 5459 l 3229 5456 l 3184 5452 l 3141 5448 l
 3100 5444 l 3061 5440 l 3023 5435 l 2986 5430 l 2950 5425 l
 2916 5419 l 2882 5413 l 2848 5407 l 2815 5400 l 2783 5393 l
 2746 5384 l 2709 5375 l 2673 5365 l 2636 5354 l 2599 5343 l
 2562 5332 l 2525 5319 l 2488 5306 l 2450 5292 l 2413 5277 l
 2376 5262 l 2339 5246 l 2302 5229 l 2266 5212 l 2230 5194 l
 2195 5176 l 2161 5157 l 2128 5137 l 2095 5118 l 2064 5098 l
 2034 5077 l 2005 5057 l 1978 5036 l 1952 5015 l 1927 4994 l
 1904 4973 l 1882 4952 l 1862 4931 l 1842 4910 l 1825 4888 l
 1808 4867 l 1793 4845 l 1776 4820 l 1761 4794 l 1748 4768 l
 1736 4741 l 1725 4713 l 1716 4684 l 1707 4655 l 1700 4626 l
 1695 4595 l 1691 4565 l 1688 4534 l 1687 4502 l 1687 4471 l
 1688 4440 l 1691 4409 l 1695 4378 l 1700 4348 l 1707 4318 l
 1714 4289 l 1723 4261 l 1732 4234 l 1743 4208 l 1754 4183 l
 1766 4159 l 1779 4136 l 1793 4114 l 1807 4093 l 1823 4073 l
 1838 4053 l 1855 4034 l 1873 4016 l 1892 3999 l 1913 3981 l
 1935 3964 l 1959 3948 l 1985 3931 l 2013 3914 l 2044 3897 l
 2076 3880 l 2111 3863 l 2148 3845 l 2186 3827 l 2226 3809 l
 2267 3792 l 2307 3775 l 2346 3758 l 2383 3743 l 2416 3730 l
 2446 3718 l 2470 3709 l 2490 3701 l 2504 3696 l 2513 3693 l
 2518 3691 l
 2520 3690 l gs col4 s gr 
/Times-Roman ff 270.00 scf sf
1980 2745 m
gs 1 -1 sc (x) col0 sh gr
/Times-Roman ff 180.00 scf sf
2160 2835 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
2970 2205 m
gs 1 -1 sc (x) col0 sh gr
/Times-Roman ff 180.00 scf sf
3150 2340 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 180.00 scf sf
3735 3195 m
gs 1 -1 sc (C) col0 sh gr
/Times-Roman ff 180.00 scf sf
3915 3330 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 270.00 scf sf
4680 3690 m
gs 1 -1 sc (x) col0 sh gr
/Times-Roman ff 180.00 scf sf
4815 3780 m
gs 1 -1 sc (5) col0 sh gr
/Times-Roman ff 270.00 scf sf
4230 5580 m
gs 1 -1 sc (x) col0 sh gr
/Times-Roman ff 180.00 scf sf
4410 5670 m
gs 1 -1 sc (4) col0 sh gr
/Times-Roman ff 180.00 scf sf
3600 4320 m
gs 1 -1 sc (C) col0 sh gr
/Times-Roman ff 180.00 scf sf
3735 4455 m
gs 1 -1 sc (3) col0 sh gr
/Times-Roman ff 270.00 scf sf
2160 4365 m
gs 1 -1 sc (x) col0 sh gr
/Times-Roman ff 180.00 scf sf
2340 4500 m
gs 1 -1 sc (3) col0 sh gr
/Times-Roman ff 180.00 scf sf
2565 3735 m
gs 1 -1 sc (C) col0 sh gr
/Times-Roman ff 180.00 scf sf
2700 3825 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
6930 2475 m
gs 1 -1 sc (x) col0 sh gr
/Times-Roman ff 180.00 scf sf
7110 2565 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 270.00 scf sf
8325 2430 m
gs 1 -1 sc (x) col0 sh gr
/Times-Roman ff 180.00 scf sf
8505 2565 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 180.00 scf sf
7965 3510 m
gs 1 -1 sc (C) col0 sh gr
/Times-Roman ff 180.00 scf sf
8145 3645 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 270.00 scf sf
8685 4320 m
gs 1 -1 sc (x) col0 sh gr
/Times-Roman ff 180.00 scf sf
8820 4410 m
gs 1 -1 sc (5) col0 sh gr
/Times-Roman ff 270.00 scf sf
6390 4320 m
gs 1 -1 sc (x) col0 sh gr
/Times-Roman ff 180.00 scf sf
6570 4410 m
gs 1 -1 sc (4) col0 sh gr
/Times-Roman ff 180.00 scf sf
6840 3780 m
gs 1 -1 sc (C) col0 sh gr
/Times-Roman ff 180.00 scf sf
6975 3915 m
gs 1 -1 sc (3) col0 sh gr
/Times-Roman ff 270.00 scf sf
6570 3285 m
gs 1 -1 sc (x) col0 sh gr
/Times-Roman ff 180.00 scf sf
6750 3420 m
gs 1 -1 sc (3) col0 sh gr
/Times-Roman ff 180.00 scf sf
6255 2475 m
gs 1 -1 sc (C) col0 sh gr
/Times-Roman ff 180.00 scf sf
6390 2565 m
gs 1 -1 sc (1) col0 sh gr
% here ends figure;
% 
% here starts figure with depth 48
% Polyline
0 slj
0 slc
7.500 slw
n 14895 3960 m 14805 3960 l 14805 3870 l 14715 3870 l 14715 3780 l 14805 3780 l
 14805 3690 l 14715 3690 l 14715 3600 l 14805 3600 l 14805 3510 l
 14715 3510 l 14715 3420 l 14805 3420 l 14805 3330 l 14985 3330 l
 14985 3960 l
 cp gs col0 s gr 
% here ends figure;
pagefooter
showpage
%%Trailer
end
%EOF
